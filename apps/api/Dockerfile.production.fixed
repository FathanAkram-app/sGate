FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    tini && \
    rm -rf /var/cache/apk/*

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S sgate -u 1001 -G nodejs

WORKDIR /app

# Install dependencies stage
FROM base AS deps
COPY package.json package-lock.json ./
COPY apps/api/package.json ./apps/api/
COPY packages/shared/package.json ./packages/shared/

RUN npm install

# Build stage  
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY package.json ./
COPY packages/shared ./packages/shared
COPY apps/api ./apps/api

# Build shared package first
RUN cd packages/shared && npm run build

# Build API
RUN cd apps/api && npm run build

# Production stage
FROM base AS runtime

ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=2048"

# Copy built application - adjust paths based on actual NestJS output
COPY --from=builder --chown=sgate:nodejs /app/apps/api/dist ./apps/api/dist
COPY --from=builder --chown=sgate:nodejs /app/packages/shared/dist ./packages/shared/dist
COPY --from=builder --chown=sgate:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=sgate:nodejs /app/apps/api/package.json ./apps/api/
COPY --from=builder --chown=sgate:nodejs /app/package.json ./

# Create directories and switch to app user
RUN mkdir -p logs tmp && chown -R sgate:nodejs /app
USER sgate

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:4000/health/live || exit 1

EXPOSE 4000

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "/app/apps/api/dist/apps/api/src/main.js"]