services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sgate-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: sgate_production
      POSTGRES_USER: sgate_prod
      POSTGRES_PASSWORD: ${DB_PASSWORD:-sgate_secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--auth-local=trust --auth-host=md5"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
      - ./infra/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "9020:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sgate_prod -d sgate_production"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - sgate-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: sgate-redis-prod
    restart: unless-stopped
    command: |
      sh -c '
      echo "
      bind 0.0.0.0
      port 6379
      requirepass $$REDIS_PASSWORD
      maxmemory 512mb
      maxmemory-policy allkeys-lru
      save 900 1
      save 300 10
      save 60 10000
      loglevel notice
      protected-mode yes
      tcp-keepalive 300
      timeout 0
      " > /etc/redis/redis.conf &&
      redis-server /etc/redis/redis.conf
      '
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_secure_password_change_me}
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    ports:
      - "9021:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-redis_secure_password_change_me}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - sgate-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # API Service
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: production
    image: sgate/api:${VERSION:-latest}
    container_name: sgate-api-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgresql://sgate_prod:${DB_PASSWORD:-sgate_secure_password_change_me}@postgres:5432/sgate_production
      REDIS_URL: redis://default:${REDIS_PASSWORD:-redis_secure_password_change_me}@redis:6379
      API_KEY_SALT: ${API_KEY_SALT:-sgate_api_32bytes_min_change_in_production}
      WEBHOOK_SIGNATURE_SALT: ${WEBHOOK_SIGNATURE_SALT:-sgate_wh_32bytes_min_change_in_production}
      JWT_SECRET: ${JWT_SECRET:-change_me_in_production}
      STACKS_NETWORK: ${STACKS_NETWORK:-testnet}
      HIRO_API_BASE: ${HIRO_API_BASE:-https://api.testnet.hiro.so}
      SBTC_ASSET_IDENTIFIER: ${SBTC_ASSET_IDENTIFIER:-ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.sbtc-token::sbtc}
      GATEWAY_ADDRESS: ${GATEWAY_ADDRESS:-ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM}
      API_BASE_URL: ${API_BASE_URL:-http://localhost:9022}
      CHECKOUT_BASE_URL: ${CHECKOUT_BASE_URL:-http://localhost:9023}
      REQUIRED_CONFIRMATIONS: ${REQUIRED_CONFIRMATIONS:-1}
      RATE_LIMIT_ENABLED: "true"
      ENABLE_METRICS: "true"
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      TRUST_PROXY: "1"
    volumes:
      - api_logs:/app/logs
    ports:
      - "9022:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sgate-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Web Dashboard
  web:
    build:
      context: .
      dockerfile: ./web/Dockerfile
      target: production
    image: sgate/web:${VERSION:-latest}
    container_name: sgate-web-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_BASE_URL: ${API_BASE_URL:-http://localhost:9022}
    ports:
      - "9023:3000"
    depends_on:
      - api
    networks:
      - sgate-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  postgres_logs:
    driver: local
  redis_data:
    driver: local
  redis_logs:
    driver: local
  api_logs:
    driver: local

networks:
  sgate-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16